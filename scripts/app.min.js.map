{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app/app.ts","src/scripts/app/beehive.ts","src/scripts/app/gmaps.ts","src/scripts/app/hive.ts","src/scripts/app/map.ts","src/scripts/config.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","D:\\Code\\beccasafan\\PGM-MultiLoc\\src\\scripts\\app\\app.ts","$","gmaps_ts_1","Location","latitude","longitude","latLng","google","maps","LatLng","prototype","toString","lat","lng","getLatLng","Util","getHiveRadius","steps","Math","sqrt","scanRadius","getStepsToCoverRadius","radius","ceil","getBeehiveRadius","leaps","floor","getLeapsToCoverRadius","distanceBetweenHiveCenters","hexInnerRadius","locationAdjustment","distanceAdjustment","GMaps","document","foundation","config_ts_1","app_ts_1","hive_ts_1","Beehive","options","_this","hives","isEditingHives","coveringRadius","default","mapObject","Circle","fillColor","fillOpacity","strokeWeight","clickable","center","editable","draggable","zIndex","map","addMapObject","generateHives","toggleActive","addListener","getRadius","newLeaps","getCenter","getHives","reset","dispose","removeMapObject","locations","getNextPoint","p","heading","distance","adjust","nextPoint","geometry","spherical","computeOffset","push","Hive","point","lastHiveCenter","leap","se","sw","nw","ne","resize","disableActive","isActive","set","fromMap","setActiveBeehive","editHives","removeListener","load_google_maps_api_1","map_ts_1","key","googleMapsKey","libraries","then","googleMaps","initMap","Map","gmap","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","input","controls","ControlPosition","TOP_CENTER","BOTTOM_CENTER","LEFT_BOTTOM","autocomplete","places","Autocomplete","bindTo","place","getPlace","setCenter","location","setZoom","event","addBeehive","addListenerOnce","handleCustomControls","hexPoints","hex","Polygon","paths","activeListener","remove","beehive_ts_1","beehives","activeBeehive","data","end","maxSteps","initialStart","show","Foundation","reInit","on","changeSteps","removeActiveHive","generateCoordsContent","beehive","eventName","handler","Number","val","splice","indexOf","hide","console","log","coords","b","h","hive","empty","append","html","Config","Object","defineProperty","value"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as $ from 'jquery';\r\nimport 'jquery-migrate';\r\nimport 'foundation-sites';\r\n\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {GMaps} from './gmaps.ts';\r\n\r\nimport config from '../config.ts';\r\n\r\nexport class Location {\r\n  private latLng: google.maps.LatLng;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latLng = new google.maps.LatLng(latitude, longitude);\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this.latLng.lat()}, ${this.latLng.lng()}`;\r\n  }\r\n\r\n  public getLatLng(): google.maps.LatLng {\r\n    return this.latLng;\r\n  }\r\n}\r\n\r\nexport class Util {\r\n  private static scanRadius: number = 70;\r\n  public static locationAdjustment: number = Math.sqrt(3) * Util.scanRadius / 2;\r\n\r\n  public static getHiveRadius(steps: number): number {\r\n    return ((steps - 1) * Math.sqrt(3) * this.scanRadius) + this.scanRadius;\r\n  }\r\n\r\n  public static getStepsToCoverRadius(radius: number): number {\r\n    return Math.ceil(((radius - this.scanRadius) / this.scanRadius / Math.sqrt(3)) + 1);\r\n  }\r\n\r\n  public static getBeehiveRadius(leaps: number, steps: number): number {\r\n    return Math.floor((3 * leaps / 2) - 0.5) * Util.getHiveRadius(steps);\r\n  }\r\n\r\n  public static getLeapsToCoverRadius(radius: number, steps: number): number {\r\n    return Math.ceil((((radius / Util.getHiveRadius(steps)) + 0.5) * 2 / 3));\r\n  }\r\n  public static distanceBetweenHiveCenters(steps: number): number {\r\n    let hexInnerRadius = (steps - 1) * (3 * this.scanRadius / 2) + Util.locationAdjustment;\r\n    let distanceAdjustment = (this.scanRadius / 2) - ((this.scanRadius - Util.locationAdjustment) * 2);\r\n    return (hexInnerRadius * 2 - distanceAdjustment);\r\n  }\r\n}\r\n\r\nexport class App {\r\n  private map: Map;\r\n\r\n  constructor() {\r\n    let gmaps = new GMaps();\r\n\r\n    $(document).foundation();\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\nimport {IHiveOptions, Hive} from './hive.ts';\r\n\r\nexport interface IBeehiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  leaps: number;\r\n}\r\nexport class Beehive {\r\n  private options: IBeehiveOptions;\r\n  private lastHiveCenter: google.maps.LatLng;\r\n  private hives: Hive[];\r\n  private mapObject: google.maps.Circle;\r\n  private isActive: boolean;\r\n  private isEditingHives: boolean;\r\n  private coveringRadius: number;\r\n\r\n  constructor (options: IBeehiveOptions) {\r\n    this.options = options;\r\n    this.hives = [];\r\n    this.isEditingHives = false;\r\n    this.coveringRadius = Util.getBeehiveRadius(config.leaps, config.steps);\r\n\r\n    this.mapObject = new google.maps.Circle({\r\n      radius: this.coveringRadius,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.0,\r\n      strokeWeight: 1,\r\n      clickable: true,\r\n      center: this.options.center.getLatLng(),\r\n      editable: true,\r\n      draggable: true,\r\n      zIndex: 3\r\n    });\r\n\r\n    this.options.map.addMapObject(this.mapObject);\r\n\r\n    this.generateHives();\r\n    this.toggleActive();\r\n\r\n    this.options.map.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n\r\n    this.options.map.addListener(this.mapObject, 'radius_changed', () => {\r\n      this.coveringRadius = this.mapObject.getRadius();\r\n\r\n      let newLeaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n      if (this.options.leaps !== newLeaps) {\r\n        this.options.leaps = newLeaps;\r\n        this.generateHives();\r\n      }\r\n\r\n    });\r\n\r\n    this.options.map.addListener(this.mapObject, 'center_changed', () => {\r\n      let center = this.mapObject.getCenter();\r\n      this.options.center = new Location(center.lat(), center.lng());\r\n      this.generateHives();\r\n    });\r\n  }\r\n\r\n  public getHives(): Hive[] {\r\n    return this.hives;\r\n  }\r\n\r\n  public reset(dispose: boolean = false): void {\r\n    // cleanup old hives\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.hives[i].reset();\r\n    }\r\n\r\n    this.hives = [];\r\n\r\n    if (dispose) {\r\n      this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Circle;\r\n    }\r\n  }\r\n\r\n  private generateHives(): Hive[] {\r\n    this.reset();\r\n\r\n    let locations: Hive[] = [];\r\n    let distanceBetweenHiveCenters = Util.distanceBetweenHiveCenters(this.options.steps);\r\n\r\n    let getNextPoint = (p, heading, distance = distanceBetweenHiveCenters, adjust = true) => {\r\n      let nextPoint = google.maps.geometry.spherical.computeOffset(p, distance, heading);\r\n      if (adjust) {\r\n        nextPoint = google.maps.geometry.spherical.computeOffset(nextPoint, Util.locationAdjustment, heading + 90);\r\n      }\r\n      locations.push(new Hive(<IHiveOptions>{ center: new Location(nextPoint.lat(), nextPoint.lng()), steps: this.options.steps, map: this.options.map }));\r\n      return nextPoint;\r\n    };\r\n\r\n    let point: google.maps.LatLng = this.options.center.getLatLng();\r\n    point = getNextPoint(point, 0, 0, false);\r\n    this.lastHiveCenter = point;\r\n\r\n    for (let leap = 2; leap <= this.options.leaps; leap++) {\r\n      point = getNextPoint(this.lastHiveCenter, 0, distanceBetweenHiveCenters);\r\n\r\n      this.lastHiveCenter = point;\r\n\r\n      for (let se = 1; se < leap; se++) {\r\n        point = getNextPoint(point, 120);\r\n      }\r\n\r\n      for (let s = 1; s < leap; s++) {\r\n        point = getNextPoint(point, 180);\r\n      }\r\n\r\n      for (let sw = 1; sw < leap; sw++) {\r\n        point = getNextPoint(point, 240);\r\n      }\r\n\r\n      for (let nw = 1; nw < leap; nw++) {\r\n        point = getNextPoint(point, 300);\r\n      }\r\n\r\n      for (let n = 1; n < leap; n++) {\r\n        point = getNextPoint(point, 0);\r\n      }\r\n\r\n      for (let ne = 2; ne < leap; ne++) {\r\n        point = getNextPoint(point, 60);\r\n      }\r\n    }\r\n\r\n    this.hives = locations;\r\n    return this.hives;\r\n  }\r\n\r\n  public resize(steps: number): void {\r\n    this.options.steps = steps;\r\n    this.options.leaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n    this.generateHives();\r\n  }\r\n\r\n  public disableActive(): void {\r\n    this.isActive = false;\r\n    this.mapObject.set('fillOpacity', 0);\r\n  }\r\n\r\n  public toggleActive(fromMap: boolean = false): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillOpacity', this.isActive ? 0.3 : 0);\r\n\r\n    this.options.map.setActiveBeehive(this.isActive ? this : null);\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.isEditingHives = !this.isEditingHives;\r\n\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.isEditingHives ? this.hives[i].addListener() : this.hives[i].removeListener();\r\n    }\r\n\r\n    this.mapObject.set('zIndex', this.isEditingHives ? 1 : 3);\r\n    this.mapObject.set('fillOpacity', this.isEditingHives ? 0 : 0.3);\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport * as $ from 'jquery';\r\nimport loadGoogleMapsApi from 'load-google-maps-api';\r\nimport {Location} from './app.ts';\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\n\r\nexport class GMaps {\r\n    private map: Map;\r\n    private gmap: google.maps.Map;\r\n\r\n    constructor() {\r\n        loadGoogleMapsApi({\r\n            key: config.googleMapsKey,\r\n            libraries: ['places', 'geometry']\r\n        }).then((googleMaps) => {\r\n            this.initMap();\r\n            this.map = new Map(<IMapOptions>{ gmap: this.gmap });\r\n        });\r\n    }\r\n\r\n    private initMap(): void {\r\n        this.gmap = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: config.zoom,\r\n            center: new google.maps.LatLng(config.latitude, config.longitude),\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false\r\n        });\r\n\r\n        let input = document.getElementById('pac-input') as HTMLInputElement;\r\n        this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('custom-map-controls'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(document.getElementById('generate-trigger'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(document.getElementById('github-buttons'));\r\n\r\n        let autocomplete = new google.maps.places.Autocomplete(input);\r\n        autocomplete.bindTo('bounds', this.gmap);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            let place = autocomplete.getPlace();\r\n            if (place.geometry) {\r\n                this.gmap.setCenter(place.geometry.location);\r\n                this.gmap.setZoom(config.zoom);\r\n            }\r\n        });\r\n\r\n        this.gmap.addListener('click', (event: google.maps.MouseEvent) => {\r\n            this.map.addBeehive(new Location(event.latLng.lat(), event.latLng.lng()));\r\n        });\r\n\r\n\r\n        google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\r\n            this.map.handleCustomControls();\r\n        });\r\n    }\r\n}\r\n","import {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\n\r\nexport interface IHiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  index: number;\r\n}\r\nexport class Hive {\r\n  private options: IHiveOptions;\r\n  private mapObject: google.maps.Polygon;\r\n  public isActive: boolean;\r\n  private activeListener: google.maps.MapsEventListener;\r\n\r\n  constructor(options: IHiveOptions) {\r\n    this.options = options;\r\n\r\n    let center = this.options.center.getLatLng();\r\n    let radius = Util.getHiveRadius(this.options.steps);\r\n\r\n    let computeOffset = google.maps.geometry.spherical.computeOffset;\r\n\r\n    let hexPoints: google.maps.LatLng[] = [\r\n      computeOffset(center, radius, 30),\r\n      computeOffset(center, radius, 90),\r\n      computeOffset(center, radius, 150),\r\n      computeOffset(center, radius, 210),\r\n      computeOffset(center, radius, 270),\r\n      computeOffset(center, radius, 330)\r\n    ];\r\n\r\n    let hex = new google.maps.Polygon({\r\n      paths: hexPoints,\r\n      fillOpacity: 0.3,\r\n      strokeWeight: 1,\r\n      zIndex: 2,\r\n    });\r\n\r\n    this.mapObject = hex;\r\n    this.toggleActive();\r\n    this.options.map.addMapObject(hex);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Polygon;\r\n  }\r\n\r\n  public toggleActive(): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillColor', this.isActive ? '#0F0' : '#F00');\r\n  }\r\n\r\n  public addListener(): void {\r\n    this.activeListener = google.maps.event.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n  }\r\n\r\n  public removeListener(): void {\r\n    this.activeListener.remove();\r\n  }\r\n\r\n  public getCenter(): Location {\r\n    return this.options.center;\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\nimport * as $ from 'jquery';\r\n\r\nexport interface IMapOptions {\r\n  gmap: google.maps.Map;\r\n}\r\n\r\nexport class Map {\r\n  private options: IMapOptions;\r\n  private beehives: Beehive[];\r\n  private activeBeehive: Beehive;\r\n  private isEditingHives: boolean;\r\n  private steps: number;\r\n\r\n  constructor (options: IMapOptions) {\r\n    this.options = options;\r\n    this.beehives = [];\r\n    this.activeBeehive = null;\r\n\r\n    this.steps = config.steps;\r\n  }\r\n\r\n  public handleCustomControls(): void {\r\n    let options = $('#beehive-control .slider').data('zfPlugin').options;\r\n    options.end = config.maxSteps;\r\n    options.initialStart = config.steps;\r\n\r\n    $('#custom-map-controls').show();\r\n    Foundation.reInit(['slider']);\r\n\r\n    $('#beehive-control .slider').on('moved.zf.slider', (e) => this.changeSteps(e));\r\n    $('#remove').on('click', () => this.removeActiveHive());\r\n    $('#edit-hives').on('click', () => this.editHives());\r\n    $('#generate-trigger').on('click', () => this.generateCoordsContent());\r\n  }\r\n\r\n  public addBeehive(location: Location): void {\r\n    let beehive = new Beehive(<IBeehiveOptions>{ map: this, steps: config.steps, leaps: config.leaps, center: location });\r\n    this.beehives.push(beehive);\r\n    $('#generate-trigger').show();\r\n  }\r\n\r\n  public addMapObject(mapObject: google.maps.MVCObject): void {\r\n      mapObject.set('map', this.options.gmap);\r\n  }\r\n\r\n  public removeMapObject(mapObject: google.maps.MVCObject): google.maps.MVCObject {\r\n      mapObject.set('map', null);\r\n      mapObject = null;\r\n      return mapObject;\r\n  }\r\n\r\n  public addListener(mapObject: google.maps.MVCObject, eventName: string, handler: (...args: any[]) => void): void {\r\n    google.maps.event.addListener(mapObject, eventName, handler);\r\n  }\r\n\r\n  private changeSteps(event: JQueryEventObject): void {\r\n    this.steps = Number($('#steps').val());\r\n\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.resize(this.steps);\r\n    }\r\n  }\r\n  private removeActiveHive(): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.reset(true);\r\n      this.beehives.splice(this.beehives.indexOf(this.activeBeehive), 1);\r\n      this.activeBeehive = null;\r\n      $('#remove').hide();\r\n\r\n      if (this.beehives.length === 0) {\r\n        $('#generate-trigger').hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  public setActiveBeehive(beehive: Beehive): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.disableActive();\r\n    }\r\n    if (beehive !== null) {\r\n      $('#remove').show();\r\n      $('#edit-hives').show();\r\n    } else {\r\n      $('#remove').hide();\r\n      $('#edit-hives').hide();\r\n    }\r\n    this.activeBeehive = beehive;\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.activeBeehive.editHives();\r\n  }\r\n\r\n  private generateCoordsContent(): void {\r\n    console.log('coords');\r\n    let coords: string = '';\r\n    for (let b = 0; b < this.beehives.length; b++) {\r\n      let hives = this.beehives[b].getHives();\r\n      for (let h = 0; h < hives.length; h++) {\r\n        let hive = hives[h];\r\n        if (hive.isActive) {\r\n          let center = hive.getCenter().toString();\r\n          coords += `<br />${center}`;\r\n        }\r\n      }\r\n    }\r\n    console.log(coords);\r\n    $('#coords-list').empty().append($('<pre>').html(coords));\r\n  }\r\n}\r\n","export default class Config {\r\n  public static googleMapsKey: string = 'AIzaSyD8WtOa0Mw_lpppdbXQrORnabd9LK3bri8';\r\n  public static latitude: number = 38.624691;\r\n  public static longitude: number = -90.184776;\r\n  public static zoom: number = 12;\r\n  public static leaps: number = 4;\r\n  public static steps: number = 5;\r\n  public static maxSteps: number = 15;\r\n};\r\n"],"sourceRoot":"/source/"}
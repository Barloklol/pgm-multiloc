{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app/app.ts","src/scripts/app/beehive.ts","src/scripts/app/gmaps.ts","src/scripts/app/hive.ts","src/scripts/app/map.ts","src/scripts/config.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","D:\\Code\\beccasafan\\PGM-MultiLoc\\src\\scripts\\app\\app.ts","$","gmaps_ts_1","Location","latitude","longitude","latLng","google","maps","LatLng","prototype","toString","lat","lng","getLatLng","Util","getHiveRadius","steps","Math","sqrt","getStepsToCoverRadius","radius","ceil","getBeehiveRadius","leaps","floor","getLeapsToCoverRadius","GMaps","document","foundation","config_ts_1","app_ts_1","hive_ts_1","Beehive","options","_this","hives","isEditingHives","coveringRadius","default","mapObject","Circle","fillColor","fillOpacity","strokeWeight","clickable","center","editable","draggable","zIndex","map","addMapObject","generateHives","toggleActive","addListener","getRadius","newLeaps","getCenter","getHives","reset","dispose","removeMapObject","locations","distanceBetweenHiveCenters","getNextPoint","p","heading","distance","nextPoint","geometry","spherical","computeOffset","push","Hive","point","lastHiveCenter","leap","se","sw","nw","ne","resize","disableActive","isActive","set","fromMap","setActiveBeehive","editHives","removeListener","load_google_maps_api_1","map_ts_1","key","googleMapsKey","libraries","then","googleMaps","initMap","Map","gmap","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","input","controls","ControlPosition","TOP_CENTER","BOTTOM_CENTER","LEFT_BOTTOM","autocomplete","places","Autocomplete","bindTo","place","getPlace","setCenter","location","setZoom","event","addBeehive","addListenerOnce","handleCustomControls","hexPoints","hex","Polygon","paths","activeListener","remove","beehive_ts_1","beehives","activeBeehive","data","end","maxSteps","initialStart","show","Foundation","reInit","on","changeSteps","removeActiveHive","generateCoordsContent","beehive","console","log","eventName","handler","Number","val","splice","indexOf","hide","coords","b","h","hive","empty","append","html","Config","Object","defineProperty","value"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,IAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,iEAAA,SAAAP,EAAAjB,EAAAD,eCAA,IAAY0B,GAACR,EAAM,SACnBA,GAAO,kBACPA,EAAO,mBAGP,IAAAS,GAAAT,EAAoB,cAIpBU,EAAA,WAGE,QAAAA,GAAYC,EAAkBC,GAC5BtB,KAAKuB,OAAS,GAAIC,QAAOC,KAAKC,OAAOL,EAAUC,GAUnD,MAPSF,GAAAO,UAAAC,SAAP,WACE,MAAU5B,MAAKuB,OAAOM,MAAK,KAAK7B,KAAKuB,OAAOO,OAGvCV,EAAAO,UAAAI,UAAP,WACE,MAAO/B,MAAKuB,QAEhBH,IAda5B,GAAA4B,SAAQA,CAgBrB,IAAAY,GAAA,WAAA,QAAAA,MAgBA,MAfgBA,GAAAC,cAAd,SAA4BC,GAC1B,OAASA,EAAQ,GAAKC,KAAKC,KAAK,GAAK,GAAM,IAG/BJ,EAAAK,sBAAd,SAAoCC,GAClC,MAAOH,MAAKI,MAAOD,EAAS,IAAM,GAAKH,KAAKC,KAAK,GAAM,IAG3CJ,EAAAQ,iBAAd,SAA+BC,EAAeP,GAC5C,MAAOC,MAAKO,MAAO,EAAID,EAAQ,EAAK,IAAOT,EAAKC,cAAcC,IAGlDF,EAAAW,sBAAd,SAAoCL,EAAgBJ,GAClD,MAAOC,MAAKI,KAAoD,GAA7CD,EAASN,EAAKC,cAAcC,GAAU,IAAW,IAExEF,IAhBaxC,GAAAwC,KAAIA,CAkBjB,IAAA/B,GAAA,WAGE,QAAAA,KACc,GAAIkB,GAAAyB,KAEhB1B,GAAE2B,UAAUC,aAEhB,MAAA7C,KARaT,GAAAS,IAAGA,8QC3ChB,IAAA8C,GAAArC,EAAmB,gBACnBsC,EAAAtC,EAA6B,YAE7BuC,EAAAvC,EAAiC,aAQjCwC,EAAA,WASE,QAAAA,GAAaC,GATf,GAAAC,GAAApD,IAUIA,MAAKmD,QAAUA,EACfnD,KAAKqD,SACLrD,KAAKsD,gBAAiB,EACtBtD,KAAKuD,eAAiBP,EAAAhB,KAAKQ,iBAAiBO,EAAAS,QAAOf,MAAOM,EAAAS,QAAOtB,OAEjElC,KAAKyD,UAAY,GAAIjC,QAAOC,KAAKiC,QAC/BpB,OAAQtC,KAAKuD,eACbI,UAAW,UACXC,YAAa,EACbC,aAAc,EACdC,WAAW,EACXC,OAAQ/D,KAAKmD,QAAQY,OAAOhC,YAC5BiC,UAAU,EACVC,WAAW,EACXC,OAAQ,IAGVlE,KAAKmD,QAAQgB,IAAIC,aAAapE,KAAKyD,WAEnCzD,KAAKqE,gBACLrE,KAAKsE,eAELtE,KAAKmD,QAAQgB,IAAII,YAAYvE,KAAKyD,UAAW,QAAS,WAAM,MAAAL,GAAKkB,iBAEjEtE,KAAKmD,QAAQgB,IAAII,YAAYvE,KAAKyD,UAAW,iBAAkB,WAC7DL,EAAKG,eAAiBH,EAAKK,UAAUe,WAErC,IAAIC,GAAWzB,EAAAhB,KAAKW,sBAAsBS,EAAKG,eAAgBH,EAAKD,QAAQjB,MACxEkB,GAAKD,QAAQV,QAAUgC,IACzBrB,EAAKD,QAAQV,MAAQgC,EACrBrB,EAAKiB,mBAKTrE,KAAKmD,QAAQgB,IAAII,YAAYvE,KAAKyD,UAAW,iBAAkB,WAC7D,GAAIM,GAASX,EAAKK,UAAUiB,WAC5BtB,GAAKD,QAAQY,OAAS,GAAIf,GAAA5B,SAAS2C,EAAOlC,MAAOkC,EAAOjC,OACxDsB,EAAKiB,kBAkGX,MA9FSnB,GAAAvB,UAAAgD,SAAP,WACE,MAAO3E,MAAKqD,OAGPH,EAAAvB,UAAAiD,MAAP,SAAaC,GAAA,SAAAA,IAAAA,GAAA,EAEX,KAAK,GAAIlE,GAAI,EAAGA,EAAIX,KAAKqD,MAAMrC,OAAQL,IACrCX,KAAKqD,MAAM1C,GAAGiE,OAGhB5E,MAAKqD,SAEDwB,IACF7E,KAAKyD,UAAYzD,KAAKmD,QAAQgB,IAAIW,gBAAgB9E,KAAKyD,aAInDP,EAAAvB,UAAA0C,cAAR,WAAA,GAAAjB,GAAApD,IACEA,MAAK4E,OAEL,IAAIG,MACAC,EAAmG,GAA1C,KAA1BhF,KAAKmD,QAAQjB,MAAQ,GAAoC,GAAfC,KAAKC,KAAK,GAAU,GAE7F6C,EAAe,SAACC,EAAGC,EAASC,GAAA,SAAAA,IAAAA,EAAAJ,EAC9B,IAAIK,GAAY7D,OAAOC,KAAK6D,SAASC,UAAUC,cAAcN,EAAGE,EAAUD,EAE1E,OADAJ,GAAUU,KAAK,GAAIxC,GAAAyC,MAAqB3B,OAAQ,GAAIf,GAAA5B,SAASiE,EAAUxD,MAAOwD,EAAUvD,OAAQI,MAAOkB,EAAKD,QAAQjB,MAAOiC,IAAKf,EAAKD,QAAQgB,OACtIkB,GAGLM,EAA4B3F,KAAKmD,QAAQY,OAAOhC,WACpD4D,GAAQV,EAAaU,EAAO,EAAG,GAC/B3F,KAAK4F,eAAiBD,CAEtB,KAAK,GAAIE,GAAO,EAAGA,GAAQ7F,KAAKmD,QAAQV,MAAOoD,IAAQ,CACrDF,EAAQV,EAAajF,KAAK4F,eAAgB,GAC1C5F,KAAK4F,eAAiBD,CAEtB,KAAK,GAAIG,GAAK,EAAGA,EAAKD,EAAMC,IAC1BH,EAAQV,EAAaU,EAAO,IAG9B,KAAK,GAAIrF,GAAI,EAAGA,EAAIuF,EAAMvF,IACxBqF,EAAQV,EAAaU,EAAO,IAG9B,KAAK,GAAII,GAAK,EAAGA,EAAKF,EAAME,IAC1BJ,EAAQV,EAAaU,EAAO,IAG9B,KAAK,GAAIK,GAAK,EAAGA,EAAKH,EAAMG,IAC1BL,EAAQV,EAAaU,EAAO,IAG9B,KAAK,GAAIvF,GAAI,EAAGA,EAAIyF,EAAMzF,IACxBuF,EAAQV,EAAaU,EAAO,EAG9B,KAAK,GAAIM,GAAK,EAAGA,EAAKJ,EAAMI,IAC1BN,EAAQV,EAAaU,EAAO,IAKhC,MADA3F,MAAKqD,MAAQ0B,EACN/E,KAAKqD,OAGPH,EAAAvB,UAAAuE,OAAP,SAAchE,GACZlC,KAAKmD,QAAQjB,MAAQA,EACrBlC,KAAKmD,QAAQV,MAAQO,EAAAhB,KAAKW,sBAAsB3C,KAAKuD,eAAgBvD,KAAKmD,QAAQjB,OAClFlC,KAAKqE,iBAGAnB,EAAAvB,UAAAwE,cAAP,WACEnG,KAAKoG,UAAW,EAChBpG,KAAKyD,UAAU4C,IAAI,cAAe,IAG7BnD,EAAAvB,UAAA2C,aAAP,SAAoBgC,GAAA,SAAAA,IAAAA,GAAA,GAClBtG,KAAKoG,UAAYpG,KAAKoG,SACtBpG,KAAKyD,UAAU4C,IAAI,cAAerG,KAAKoG,SAAW,GAAM,GAExDpG,KAAKmD,QAAQgB,IAAIoC,iBAAiBvG,KAAKoG,SAAWpG,KAAO,OAGpDkD,EAAAvB,UAAA6E,UAAP,WACExG,KAAKsD,gBAAkBtD,KAAKsD,cAE5B,KAAK,GAAI3C,GAAI,EAAGA,EAAIX,KAAKqD,MAAMrC,OAAQL,IACrCX,KAAKsD,eAAiBtD,KAAKqD,MAAM1C,GAAG4D,cAAgBvE,KAAKqD,MAAM1C,GAAG8F,gBAGpEzG,MAAKyD,UAAU4C,IAAI,SAAUrG,KAAKsD,eAAiB,EAAI,GACvDtD,KAAKyD,UAAU4C,IAAI,cAAerG,KAAKsD,eAAiB,EAAI,KAEhEJ,IAlJa1D,GAAA0D,QAAOA,0UCXpB,IAAAH,GAAArC,EAAmB,gBAEnBgG,EAAAhG,EAA8B,wBAC9BsC,EAAAtC,EAAuB,YACvBiG,EAAAjG,EAA+B,YAG/BkC,EAAA,WAII,QAAAA,KAJJ,GAAAQ,GAAApD,IAKQ0G,GAAAlD,SACIoD,IAAK7D,EAAAS,QAAOqD,cACZC,WAAY,SAAU,cACvBC,KAAK,SAACC,GACL5D,EAAK6D,UACL7D,EAAKe,IAAM,GAAIwC,GAAAO,KAAmBC,KAAM/D,EAAK+D,SAuCzD,MAnCYvE,GAAAjB,UAAAsF,QAAR,WAAA,GAAA7D,GAAApD,IACIA,MAAKmH,KAAO,GAAI3F,QAAOC,KAAKyF,IAAIrE,SAASuE,eAAe,QACpDC,KAAMtE,EAAAS,QAAO6D,KACbtD,OAAQ,GAAIvC,QAAOC,KAAKC,OAAOqB,EAAAS,QAAOnC,SAAU0B,EAAAS,QAAOlC,WACvDgG,UAAW9F,OAAOC,KAAK8F,UAAUC,QACjCC,gBAAgB,GAGpB,IAAIC,GAAQ7E,SAASuE,eAAe,YACpCpH,MAAKmH,KAAKQ,SAASnG,OAAOC,KAAKmG,gBAAgBC,YAAYpC,KAAK5C,SAASuE,eAAe,wBAExFpH,KAAKmH,KAAKQ,SAASnG,OAAOC,KAAKmG,gBAAgBE,eAAerC,KAAK5C,SAASuE,eAAe,qBAE3FpH,KAAKmH,KAAKQ,SAASnG,OAAOC,KAAKmG,gBAAgBG,aAAatC,KAAK5C,SAASuE,eAAe,kBAEzF,IAAIY,GAAe,GAAIxG,QAAOC,KAAKwG,OAAOC,aAAaR,EACvDM,GAAaG,OAAO,SAAUnI,KAAKmH,MAEnCa,EAAazD,YAAY,gBAAiB,WACtC,GAAI6D,GAAQJ,EAAaK,UACrBD,GAAM9C,WACNlC,EAAK+D,KAAKmB,UAAUF,EAAM9C,SAASiD,UACnCnF,EAAK+D,KAAKqB,QAAQzF,EAAAS,QAAO6D,SAIjCrH,KAAKmH,KAAK5C,YAAY,QAAS,SAACkE,GAC5BrF,EAAKe,IAAIuE,WAAW,GAAI1F,GAAA5B,SAASqH,EAAMlH,OAAOM,MAAO4G,EAAMlH,OAAOO,UAItEN,OAAOC,KAAKgH,MAAME,gBAAgB3I,KAAKmH,KAAM,OAAQ,WACjD/D,EAAKe,IAAIyE,0BAGrBhG,IAjDapD,GAAAoD,MAAKA,qXCPlB,IAAAI,GAAAtC,EAA6B,YAS7BgF,EAAA,WAME,QAAAA,GAAYvC,GACVnD,KAAKmD,QAAUA,CAEf,IAAIY,GAAS/D,KAAKmD,QAAQY,OAAOhC,YAC7BO,EAASU,EAAAhB,KAAKC,cAAcjC,KAAKmD,QAAQjB,OAEzCsD,EAAgBhE,OAAOC,KAAK6D,SAASC,UAAUC,cAE/CqD,GACFrD,EAAczB,EAAQzB,EAAQ,IAC9BkD,EAAczB,EAAQzB,EAAQ,IAC9BkD,EAAczB,EAAQzB,EAAQ,KAC9BkD,EAAczB,EAAQzB,EAAQ,KAC9BkD,EAAczB,EAAQzB,EAAQ,KAC9BkD,EAAczB,EAAQzB,EAAQ,MAG5BwG,EAAM,GAAItH,QAAOC,KAAKsH,SACxBC,MAAOH,EACPjF,YAAa,GACbC,aAAc,EACdK,OAAQ,GAGVlE,MAAKyD,UAAYqF,EACjB9I,KAAKsE,eACLtE,KAAKmD,QAAQgB,IAAIC,aAAa0E,GAuBlC,MApBSpD,GAAA/D,UAAAiD,MAAP,WACE5E,KAAKyD,UAAYzD,KAAKmD,QAAQgB,IAAIW,gBAAgB9E,KAAKyD,YAGlDiC,EAAA/D,UAAA2C,aAAP,WACEtE,KAAKoG,UAAYpG,KAAKoG,SACtBpG,KAAKyD,UAAU4C,IAAI,YAAarG,KAAKoG,SAAW,OAAS,SAGpDV,EAAA/D,UAAA4C,YAAP,WAAA,GAAAnB,GAAApD,IACEA,MAAKiJ,eAAiBzH,OAAOC,KAAKgH,MAAMlE,YAAYvE,KAAKyD,UAAW,QAAS,WAAM,MAAAL,GAAKkB,kBAGnFoB,EAAA/D,UAAA8E,eAAP,WACEzG,KAAKiJ,eAAeC,UAGfxD,EAAA/D,UAAA+C,UAAP,WACE,MAAO1E,MAAKmD,QAAQY,QAExB2B,IAvDalG,GAAAkG,KAAIA,8KCTjB,IAAA3C,GAAArC,EAAmB,gBAEnByI,EAAAzI,EAAuC,gBAC3BQ,EAACR,EAAM,UAMnBwG,EAAA,WAOE,QAAAA,GAAa/D,GACXnD,KAAKmD,QAAUA,EACfnD,KAAKoJ,YACLpJ,KAAKqJ,cAAgB,KAErBrJ,KAAKkC,MAAQa,EAAAS,QAAOtB,MA4FxB,MAzFSgF,GAAAvF,UAAAiH,qBAAP,WAAA,GAAAxF,GAAApD,KACMmD,EAAUjC,EAAE,4BAA4BoI,KAAK,YAAYnG,OAC7DA,GAAQoG,IAAMxG,EAAAS,QAAOgG,SACrBrG,EAAQsG,aAAe1G,EAAAS,QAAOtB,MAE9BhB,EAAE,wBAAwBwI,OAC1BC,WAAWC,QAAQ,WAEnB1I,EAAE,4BAA4B2I,GAAG,kBAAmB,SAAC3J,GAAM,MAAAkD,GAAK0G,YAAY5J,KAC5EgB,EAAE,WAAW2I,GAAG,QAAS,WAAM,MAAAzG,GAAK2G,qBACpC7I,EAAE,eAAe2I,GAAG,QAAS,WAAM,MAAAzG,GAAKoD,cACxCtF,EAAE,qBAAqB2I,GAAG,QAAS,WAAM,MAAAzG,GAAK4G,2BAGzC9C,EAAAvF,UAAA+G,WAAP,SAAkBH,GAChB,GAAI0B,GAAU,GAAId,GAAAjG,SAA2BiB,IAAKnE,KAAMkC,MAAOa,EAAAS,QAAOtB,MAAOO,MAAOM,EAAAS,QAAOf,MAAOsB,OAAQwE,GAC1GvI,MAAKoJ,SAAS3D,KAAKwE,GACnBC,QAAQC,IAAI,UAAWjJ,EAAE,sBACzBA,EAAE,qBAAqBwI,QAGlBxC,EAAAvF,UAAAyC,aAAP,SAAoBX,GAChBA,EAAU4C,IAAI,MAAOrG,KAAKmD,QAAQgE,OAG/BD,EAAAvF,UAAAmD,gBAAP,SAAuBrB,GAGnB,MAFAA,GAAU4C,IAAI,MAAO,MACrB5C,EAAY,MAITyD,EAAAvF,UAAA4C,YAAP,SAAmBd,EAAkC2G,EAAmBC,GACtE7I,OAAOC,KAAKgH,MAAMlE,YAAYd,EAAW2G,EAAWC,IAG9CnD,EAAAvF,UAAAmI,YAAR,SAAoBrB,GAClBzI,KAAKkC,MAAQoI,OAAOpJ,EAAE,UAAUqJ,OAEL,OAAvBvK,KAAKqJ,eACPrJ,KAAKqJ,cAAcnD,OAAOlG,KAAKkC,QAG3BgF,EAAAvF,UAAAoI,iBAAR,WAC6B,OAAvB/J,KAAKqJ,gBACPrJ,KAAKqJ,cAAczE,OAAM,GACzB5E,KAAKoJ,SAASoB,OAAOxK,KAAKoJ,SAASqB,QAAQzK,KAAKqJ,eAAgB,GAChErJ,KAAKqJ,cAAgB,KACrBnI,EAAE,WAAWwJ,OAEgB,IAAzB1K,KAAKoJ,SAASpI,QAChBE,EAAE,qBAAqBwJ,SAKtBxD,EAAAvF,UAAA4E,iBAAP,SAAwB0D,GACK,OAAvBjK,KAAKqJ,eACPrJ,KAAKqJ,cAAclD,gBAEL,OAAZ8D,GACF/I,EAAE,WAAWwI,OACbxI,EAAE,eAAewI,SAEjBxI,EAAE,WAAWwJ,OACbxJ,EAAE,eAAewJ,QAEnB1K,KAAKqJ,cAAgBY,GAGhB/C,EAAAvF,UAAA6E,UAAP,WACExG,KAAKqJ,cAAc7C,aAGbU,EAAAvF,UAAAqI,sBAAR,WACEE,QAAQC,IAAI,SAEZ,KAAK,GADDQ,GAAiB,GACZC,EAAI,EAAGA,EAAI5K,KAAKoJ,SAASpI,OAAQ4J,IAExC,IAAK,GADDvH,GAAQrD,KAAKoJ,SAASwB,GAAGjG,WACpBkG,EAAI,EAAGA,EAAIxH,EAAMrC,OAAQ6J,IAAK,CACrC,GAAIC,GAAOzH,EAAMwH,EACjB,IAAIC,EAAK1E,SAAU,CACjB,GAAIrC,GAAS+G,EAAKpG,YAAY9C,UAC9B+I,IAAU,SAAS5G,GAIzBmG,QAAQC,IAAIQ,GACZzJ,EAAE,gBAAgB6J,QAAQC,OAAO9J,EAAE,SAAS+J,KAAKN,KAErDzD,IAxGa1H,GAAA0H,IAAGA,iRCThB,IAAAgE,GAAA,WAAA,QAAAA,MAQA,MAPgBA,GAAArE,cAAwB,0CACxBqE,EAAA7J,SAAmB,UACnB6J,EAAA5J,WAAoB,UACpB4J,EAAA7D,KAAe,GACf6D,EAAAzI,MAAgB,EAChByI,EAAAhJ,MAAgB,EAChBgJ,EAAA1B,SAAmB,GACnC0B,IARAC,QAAAC,eAAA5L,EAAA,cAAA6L,OAAA","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as $ from 'jquery';\r\nimport 'jquery-migrate';\r\nimport 'foundation-sites';\r\n\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {GMaps} from './gmaps.ts';\r\n\r\nimport config from '../config.ts';\r\n\r\nexport class Location {\r\n  private latLng: google.maps.LatLng;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latLng = new google.maps.LatLng(latitude, longitude);\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this.latLng.lat()}, ${this.latLng.lng()}`;\r\n  }\r\n\r\n  public getLatLng(): google.maps.LatLng {\r\n    return this.latLng;\r\n  }\r\n}\r\n\r\nexport class Util {\r\n  public static getHiveRadius(steps: number): number {\r\n    return ((steps - 1) * Math.sqrt(3) * 70) + 70;\r\n  }\r\n\r\n  public static getStepsToCoverRadius(radius: number): number {\r\n    return Math.ceil(((radius - 70) / 70 / Math.sqrt(3)) + 1);\r\n  }\r\n\r\n  public static getBeehiveRadius(leaps: number, steps: number): number {\r\n    return Math.floor((3 * leaps / 2) - 0.5) * Util.getHiveRadius(steps);\r\n  }\r\n\r\n  public static getLeapsToCoverRadius(radius: number, steps: number): number {\r\n    return Math.ceil(((radius / Util.getHiveRadius(steps)) + 0.5) * 2 / 3);\r\n  }\r\n}\r\n\r\nexport class App {\r\n  private map: Map;\r\n\r\n  constructor() {\r\n    let gmaps = new GMaps();\r\n\r\n    $(document).foundation();\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\nimport {IHiveOptions, Hive} from './hive.ts';\r\n\r\nexport interface IBeehiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  leaps: number;\r\n}\r\nexport class Beehive {\r\n  private options: IBeehiveOptions;\r\n  private lastHiveCenter: google.maps.LatLng;\r\n  private hives: Hive[];\r\n  private mapObject: google.maps.Circle;\r\n  private isActive: boolean;\r\n  private isEditingHives: boolean;\r\n  private coveringRadius: number;\r\n\r\n  constructor (options: IBeehiveOptions) {\r\n    this.options = options;\r\n    this.hives = [];\r\n    this.isEditingHives = false;\r\n    this.coveringRadius = Util.getBeehiveRadius(config.leaps, config.steps);\r\n\r\n    this.mapObject = new google.maps.Circle({\r\n      radius: this.coveringRadius,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.0,\r\n      strokeWeight: 1,\r\n      clickable: true,\r\n      center: this.options.center.getLatLng(),\r\n      editable: true,\r\n      draggable: true,\r\n      zIndex: 3\r\n    });\r\n\r\n    this.options.map.addMapObject(this.mapObject);\r\n\r\n    this.generateHives();\r\n    this.toggleActive();\r\n\r\n    this.options.map.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n\r\n    this.options.map.addListener(this.mapObject, 'radius_changed', () => {\r\n      this.coveringRadius = this.mapObject.getRadius();\r\n\r\n      let newLeaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n      if (this.options.leaps !== newLeaps) {\r\n        this.options.leaps = newLeaps;\r\n        this.generateHives();\r\n      }\r\n\r\n    });\r\n\r\n    this.options.map.addListener(this.mapObject, 'center_changed', () => {\r\n      let center = this.mapObject.getCenter();\r\n      this.options.center = new Location(center.lat(), center.lng());\r\n      this.generateHives();\r\n    });\r\n  }\r\n\r\n  public getHives(): Hive[] {\r\n    return this.hives;\r\n  }\r\n\r\n  public reset(dispose: boolean = false): void {\r\n    // cleanup old hives\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.hives[i].reset();\r\n    }\r\n\r\n    this.hives = [];\r\n\r\n    if (dispose) {\r\n      this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Circle;\r\n    }\r\n  }\r\n\r\n  private generateHives(): Hive[] {\r\n    this.reset();\r\n\r\n    let locations: Hive[] = [];\r\n    let distanceBetweenHiveCenters = ((this.options.steps - 1) * (3 * 70 / 2) + (Math.sqrt(3) * 70 / 2)) * 2;\r\n\r\n    let getNextPoint = (p, heading, distance = distanceBetweenHiveCenters) => {\r\n      let nextPoint = google.maps.geometry.spherical.computeOffset(p, distance, heading);\r\n      locations.push(new Hive(<IHiveOptions>{ center: new Location(nextPoint.lat(), nextPoint.lng()), steps: this.options.steps, map: this.options.map }));\r\n      return nextPoint;\r\n    };\r\n\r\n    let point: google.maps.LatLng = this.options.center.getLatLng();\r\n    point = getNextPoint(point, 0, 0);\r\n    this.lastHiveCenter = point;\r\n\r\n    for (let leap = 2; leap <= this.options.leaps; leap++) {\r\n      point = getNextPoint(this.lastHiveCenter, 0);\r\n      this.lastHiveCenter = point;\r\n\r\n      for (let se = 1; se < leap; se++) {\r\n        point = getNextPoint(point, 120);\r\n      }\r\n\r\n      for (let s = 1; s < leap; s++) {\r\n        point = getNextPoint(point, 180);\r\n      }\r\n\r\n      for (let sw = 1; sw < leap; sw++) {\r\n        point = getNextPoint(point, 240);\r\n      }\r\n\r\n      for (let nw = 1; nw < leap; nw++) {\r\n        point = getNextPoint(point, 300);\r\n      }\r\n\r\n      for (let n = 1; n < leap; n++) {\r\n        point = getNextPoint(point, 0);\r\n      }\r\n\r\n      for (let ne = 2; ne < leap; ne++) {\r\n        point = getNextPoint(point, 60);\r\n      }\r\n    }\r\n\r\n    this.hives = locations;\r\n    return this.hives;\r\n  }\r\n\r\n  public resize(steps: number): void {\r\n    this.options.steps = steps;\r\n    this.options.leaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n    this.generateHives();\r\n  }\r\n\r\n  public disableActive(): void {\r\n    this.isActive = false;\r\n    this.mapObject.set('fillOpacity', 0);\r\n  }\r\n\r\n  public toggleActive(fromMap: boolean = false): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillOpacity', this.isActive ? 0.3 : 0);\r\n\r\n    this.options.map.setActiveBeehive(this.isActive ? this : null);\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.isEditingHives = !this.isEditingHives;\r\n\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.isEditingHives ? this.hives[i].addListener() : this.hives[i].removeListener();\r\n    }\r\n\r\n    this.mapObject.set('zIndex', this.isEditingHives ? 1 : 3);\r\n    this.mapObject.set('fillOpacity', this.isEditingHives ? 0 : 0.3);\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport * as $ from 'jquery';\r\nimport loadGoogleMapsApi from 'load-google-maps-api';\r\nimport {Location} from './app.ts';\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\n\r\nexport class GMaps {\r\n    private map: Map;\r\n    private gmap: google.maps.Map;\r\n\r\n    constructor() {\r\n        loadGoogleMapsApi({\r\n            key: config.googleMapsKey,\r\n            libraries: ['places', 'geometry']\r\n        }).then((googleMaps) => {\r\n            this.initMap();\r\n            this.map = new Map(<IMapOptions>{ gmap: this.gmap });\r\n        });\r\n    }\r\n\r\n    private initMap(): void {\r\n        this.gmap = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: config.zoom,\r\n            center: new google.maps.LatLng(config.latitude, config.longitude),\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false\r\n        });\r\n\r\n        let input = document.getElementById('pac-input') as HTMLInputElement;\r\n        this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('custom-map-controls'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(document.getElementById('generate-trigger'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(document.getElementById('github-buttons'));\r\n\r\n        let autocomplete = new google.maps.places.Autocomplete(input);\r\n        autocomplete.bindTo('bounds', this.gmap);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            let place = autocomplete.getPlace();\r\n            if (place.geometry) {\r\n                this.gmap.setCenter(place.geometry.location);\r\n                this.gmap.setZoom(config.zoom);\r\n            }\r\n        });\r\n\r\n        this.gmap.addListener('click', (event: google.maps.MouseEvent) => {\r\n            this.map.addBeehive(new Location(event.latLng.lat(), event.latLng.lng()));\r\n        });\r\n\r\n\r\n        google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\r\n            this.map.handleCustomControls();\r\n        });\r\n    }\r\n}\r\n","import {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\n\r\nexport interface IHiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  index: number;\r\n}\r\nexport class Hive {\r\n  private options: IHiveOptions;\r\n  private mapObject: google.maps.Polygon;\r\n  public isActive: boolean;\r\n  private activeListener: google.maps.MapsEventListener;\r\n\r\n  constructor(options: IHiveOptions) {\r\n    this.options = options;\r\n\r\n    let center = this.options.center.getLatLng();\r\n    let radius = Util.getHiveRadius(this.options.steps);\r\n\r\n    let computeOffset = google.maps.geometry.spherical.computeOffset;\r\n\r\n    let hexPoints: google.maps.LatLng[] = [\r\n      computeOffset(center, radius, 30),\r\n      computeOffset(center, radius, 90),\r\n      computeOffset(center, radius, 150),\r\n      computeOffset(center, radius, 210),\r\n      computeOffset(center, radius, 270),\r\n      computeOffset(center, radius, 330)\r\n    ];\r\n\r\n    let hex = new google.maps.Polygon({\r\n      paths: hexPoints,\r\n      fillOpacity: 0.3,\r\n      strokeWeight: 1,\r\n      zIndex: 2,\r\n    });\r\n\r\n    this.mapObject = hex;\r\n    this.toggleActive();\r\n    this.options.map.addMapObject(hex);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Polygon;\r\n  }\r\n\r\n  public toggleActive(): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillColor', this.isActive ? '#0F0' : '#F00');\r\n  }\r\n\r\n  public addListener(): void {\r\n    this.activeListener = google.maps.event.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n  }\r\n\r\n  public removeListener(): void {\r\n    this.activeListener.remove();\r\n  }\r\n\r\n  public getCenter(): Location {\r\n    return this.options.center;\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\nimport * as $ from 'jquery';\r\n\r\nexport interface IMapOptions {\r\n  gmap: google.maps.Map;\r\n}\r\n\r\nexport class Map {\r\n  private options: IMapOptions;\r\n  private beehives: Beehive[];\r\n  private activeBeehive: Beehive;\r\n  private isEditingHives: boolean;\r\n  private steps: number;\r\n\r\n  constructor (options: IMapOptions) {\r\n    this.options = options;\r\n    this.beehives = [];\r\n    this.activeBeehive = null;\r\n\r\n    this.steps = config.steps;\r\n  }\r\n\r\n  public handleCustomControls(): void {\r\n    let options = $('#beehive-control .slider').data('zfPlugin').options;\r\n    options.end = config.maxSteps;\r\n    options.initialStart = config.steps;\r\n\r\n    $('#custom-map-controls').show();\r\n    Foundation.reInit(['slider']);\r\n\r\n    $('#beehive-control .slider').on('moved.zf.slider', (e) => this.changeSteps(e));\r\n    $('#remove').on('click', () => this.removeActiveHive());\r\n    $('#edit-hives').on('click', () => this.editHives());\r\n    $('#generate-trigger').on('click', () => this.generateCoordsContent());\r\n  }\r\n\r\n  public addBeehive(location: Location): void {\r\n    let beehive = new Beehive(<IBeehiveOptions>{ map: this, steps: config.steps, leaps: config.leaps, center: location });\r\n    this.beehives.push(beehive);\r\n    console.log(\"showing\", $('#generate-trigger'));\r\n    $('#generate-trigger').show();\r\n  }\r\n\r\n  public addMapObject(mapObject: google.maps.MVCObject): void {\r\n      mapObject.set('map', this.options.gmap);\r\n  }\r\n\r\n  public removeMapObject(mapObject: google.maps.MVCObject): google.maps.MVCObject {\r\n      mapObject.set('map', null);\r\n      mapObject = null;\r\n      return mapObject;\r\n  }\r\n\r\n  public addListener(mapObject: google.maps.MVCObject, eventName: string, handler: (...args: any[]) => void): void {\r\n    google.maps.event.addListener(mapObject, eventName, handler);\r\n  }\r\n\r\n  private changeSteps(event: JQueryEventObject): void {\r\n    this.steps = Number($('#steps').val());\r\n\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.resize(this.steps);\r\n    }\r\n  }\r\n  private removeActiveHive(): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.reset(true);\r\n      this.beehives.splice(this.beehives.indexOf(this.activeBeehive), 1);\r\n      this.activeBeehive = null;\r\n      $('#remove').hide();\r\n\r\n      if (this.beehives.length === 0) {\r\n        $('#generate-trigger').hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  public setActiveBeehive(beehive: Beehive): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.disableActive();\r\n    }\r\n    if (beehive !== null) {\r\n      $('#remove').show();\r\n      $('#edit-hives').show();\r\n    } else {\r\n      $('#remove').hide();\r\n      $('#edit-hives').hide();\r\n    }\r\n    this.activeBeehive = beehive;\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.activeBeehive.editHives();\r\n  }\r\n\r\n  private generateCoordsContent(): void {\r\n    console.log('coords');\r\n    let coords: string = '';\r\n    for (let b = 0; b < this.beehives.length; b++) {\r\n      let hives = this.beehives[b].getHives();\r\n      for (let h = 0; h < hives.length; h++) {\r\n        let hive = hives[h];\r\n        if (hive.isActive) {\r\n          let center = hive.getCenter().toString();\r\n          coords += `<br />${center}`;\r\n        }\r\n      }\r\n    }\r\n    console.log(coords);\r\n    $('#coords-list').empty().append($('<pre>').html(coords));\r\n  }\r\n}\r\n","export default class Config {\r\n  public static googleMapsKey: string = 'AIzaSyD8WtOa0Mw_lpppdbXQrORnabd9LK3bri8';\r\n  public static latitude: number = 38.624691;\r\n  public static longitude: number = -90.184776;\r\n  public static zoom: number = 12;\r\n  public static leaps: number = 4;\r\n  public static steps: number = 5;\r\n  public static maxSteps: number = 15;\r\n};\r\n"],"sourceRoot":"/source/"}
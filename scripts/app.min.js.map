{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app/app.ts","src/scripts/app/beehive.ts","src/scripts/app/gmaps.ts","src/scripts/app/hive.ts","src/scripts/app/map.ts","src/scripts/config.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","D:\\Code\\beccasafan\\PGM-MultiLoc\\src\\scripts\\app\\app.ts","$","gmaps_ts_1","Location","latitude","longitude","latLng","google","maps","LatLng","prototype","getLatLng","Util","getHiveRadius","steps","Math","sqrt","getStepsToCoverRadius","radius","ceil","getBeehiveRadius","leaps","floor","getLeapsToCoverRadius","GMaps","document","foundation","config_ts_1","app_ts_1","hive_ts_1","Beehive","options","_this","hives","isEditingHives","coveringRadius","default","mapObject","Circle","fillColor","fillOpacity","strokeWeight","clickable","center","editable","draggable","zIndex","map","addMapObject","generateHives","toggleActive","addListener","getRadius","newLeaps","getCenter","lat","lng","reset","dispose","removeMapObject","locations","distanceBetweenHiveCenters","getNextPoint","p","heading","distance","nextPoint","geometry","spherical","computeOffset","push","Hive","point","lastHiveCenter","leap","se","sw","nw","ne","resize","disableActive","isActive","set","fromMap","setActiveBeehive","editHives","removeListener","load_google_maps_api_1","map_ts_1","key","googleMapsKey","libraries","then","googleMaps","initMap","Map","gmap","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","input","controls","ControlPosition","TOP_CENTER","autocomplete","places","Autocomplete","bindTo","place","getPlace","setCenter","location","setZoom","event","addBeehive","addListenerOnce","handleCustomControls","hexPoints","hex","Polygon","paths","activeListener","remove","beehive_ts_1","beehives","activeBeehive","data","end","maxSteps","initialStart","show","Foundation","reInit","on","changeSteps","removeActiveHive","beehive","eventName","handler","Number","val","splice","indexOf","hide","Config","Object","defineProperty","value"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as $ from 'jquery';\r\nimport 'jquery-migrate';\r\nimport 'foundation-sites';\r\n\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {GMaps} from './gmaps.ts';\r\n\r\nimport config from '../config.ts';\r\n\r\nexport class Location {\r\n  private latLng: google.maps.LatLng;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latLng = new google.maps.LatLng(latitude, longitude);\r\n  }\r\n\r\n  public getLatLng(): google.maps.LatLng {\r\n    return this.latLng;\r\n  }\r\n}\r\n\r\nexport class Util {\r\n  public static getHiveRadius(steps: number): number {\r\n    return ((steps - 1) * Math.sqrt(3) * 70) + 70;\r\n  }\r\n\r\n  public static getStepsToCoverRadius(radius: number): number {\r\n    return Math.ceil(((radius - 70) / 70 / Math.sqrt(3)) + 1);\r\n  }\r\n\r\n  public static getBeehiveRadius(leaps: number, steps: number): number {\r\n    return Math.floor((3 * leaps / 2) - 0.5) * Util.getHiveRadius(steps);\r\n  }\r\n\r\n  public static getLeapsToCoverRadius(radius: number, steps: number): number {\r\n    return Math.ceil(((radius / Util.getHiveRadius(steps)) + 0.5) * 2 / 3);\r\n  }\r\n}\r\n\r\nexport class App {\r\n  private map: Map;\r\n\r\n  constructor() {\r\n    let gmaps = new GMaps();\r\n\r\n    $(document).foundation();\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\nimport {IHiveOptions, Hive} from './hive.ts';\r\n\r\nexport interface IBeehiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  leaps: number;\r\n}\r\nexport class Beehive {\r\n  private options: IBeehiveOptions;\r\n  private lastHiveCenter: google.maps.LatLng;\r\n  private hives: Hive[];\r\n  private mapObject: google.maps.Circle;\r\n  private isActive: boolean;\r\n  private isEditingHives: boolean;\r\n  private coveringRadius: number;\r\n\r\n  constructor (options: IBeehiveOptions) {\r\n    this.options = options;\r\n    this.hives = [];\r\n    this.isEditingHives = false;\r\n    this.coveringRadius = Util.getBeehiveRadius(config.leaps, config.steps);\r\n\r\n    this.mapObject = new google.maps.Circle({\r\n      radius: this.coveringRadius,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.0,\r\n      strokeWeight: 1,\r\n      clickable: true,\r\n      center: this.options.center.getLatLng(),\r\n      editable: true,\r\n      draggable: true,\r\n      zIndex: 3\r\n    });\r\n\r\n    this.options.map.addMapObject(this.mapObject);\r\n\r\n    this.generateHives();\r\n    this.toggleActive();\r\n\r\n    this.options.map.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n\r\n    this.options.map.addListener(this.mapObject, 'radius_changed', () => {\r\n      this.coveringRadius = this.mapObject.getRadius();\r\n\r\n      let newLeaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n      if (this.options.leaps !== newLeaps) {\r\n        this.options.leaps = newLeaps;\r\n        this.generateHives();\r\n      }\r\n\r\n    });\r\n\r\n    this.options.map.addListener(this.mapObject, 'center_changed', () => {\r\n      let center = this.mapObject.getCenter();\r\n      this.options.center = new Location(center.lat(), center.lng());\r\n      this.generateHives();\r\n    });\r\n  }\r\n\r\n  public reset(dispose: boolean = false): void {\r\n    // cleanup old hives\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.hives[i].reset();\r\n    }\r\n\r\n    this.hives = [];\r\n\r\n    if (dispose) {\r\n      this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Circle;\r\n    }\r\n  }\r\n\r\n  private generateHives(): Hive[] {\r\n    this.reset();\r\n\r\n    let locations: Hive[] = [];\r\n    let distanceBetweenHiveCenters = ((this.options.steps - 1) * (3 * 70 / 2) + (Math.sqrt(3) * 70 / 2)) * 2;\r\n\r\n    let getNextPoint = (p, heading, distance = distanceBetweenHiveCenters) => {\r\n      let nextPoint = google.maps.geometry.spherical.computeOffset(p, distance, heading);\r\n      locations.push(new Hive(<IHiveOptions>{ center: new Location(nextPoint.lat(), nextPoint.lng()), steps: this.options.steps, map: this.options.map }));\r\n      return nextPoint;\r\n    };\r\n\r\n    let point: google.maps.LatLng = this.options.center.getLatLng();\r\n    point = getNextPoint(point, 0, 0);\r\n    this.lastHiveCenter = point;\r\n\r\n    for (let leap = 2; leap <= this.options.leaps; leap++) {\r\n      point = getNextPoint(this.lastHiveCenter, 0);\r\n      this.lastHiveCenter = point;\r\n\r\n      for (let se = 1; se < leap; se++) {\r\n        point = getNextPoint(point, 120);\r\n      }\r\n\r\n      for (let s = 1; s < leap; s++) {\r\n        point = getNextPoint(point, 180);\r\n      }\r\n\r\n      for (let sw = 1; sw < leap; sw++) {\r\n        point = getNextPoint(point, 240);\r\n      }\r\n\r\n      for (let nw = 1; nw < leap; nw++) {\r\n        point = getNextPoint(point, 300);\r\n      }\r\n\r\n      for (let n = 1; n < leap; n++) {\r\n        point = getNextPoint(point, 0);\r\n      }\r\n\r\n      for (let ne = 2; ne < leap; ne++) {\r\n        point = getNextPoint(point, 60);\r\n      }\r\n    }\r\n\r\n    this.hives = locations;\r\n    return this.hives;\r\n  }\r\n\r\n  public resize(steps: number): void {\r\n    this.options.steps = steps;\r\n    this.options.leaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n    this.generateHives();\r\n  }\r\n\r\n  public disableActive(): void {\r\n    this.isActive = false;\r\n    this.mapObject.set('fillOpacity', 0);\r\n  }\r\n\r\n  public toggleActive(fromMap: boolean = false): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillOpacity', this.isActive ? 0.3 : 0);\r\n\r\n    this.options.map.setActiveBeehive(this.isActive ? this : null);\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.isEditingHives = !this.isEditingHives;\r\n\r\n    for (let i = 0; i < this.hives.length; i++) {\r\n      this.isEditingHives ? this.hives[i].addListener() : this.hives[i].removeListener();\r\n    }\r\n\r\n    this.mapObject.set('zIndex', this.isEditingHives ? 1 : 3);\r\n    this.mapObject.set('fillOpacity', this.isEditingHives ? 0 : 0.3);\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport * as $ from 'jquery';\r\nimport loadGoogleMapsApi from 'load-google-maps-api';\r\nimport {Location} from './app.ts';\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\n\r\nexport class GMaps {\r\n    private map: Map;\r\n    private gmap: google.maps.Map;\r\n\r\n    constructor() {\r\n        loadGoogleMapsApi({\r\n            key: config.googleMapsKey,\r\n            libraries: ['places', 'geometry']\r\n        }).then((googleMaps) => {\r\n            this.initMap();\r\n            this.map = new Map(<IMapOptions>{ gmap: this.gmap });\r\n        });\r\n    }\r\n\r\n    private initMap(): void {\r\n        this.gmap = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: config.zoom,\r\n            center: new google.maps.LatLng(config.latitude, config.longitude),\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false\r\n        });\r\n\r\n        let input = document.getElementById('pac-input') as HTMLInputElement;\r\n        this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('custom-map-controls'));\r\n\r\n        let autocomplete = new google.maps.places.Autocomplete(input);\r\n        autocomplete.bindTo('bounds', this.gmap);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            let place = autocomplete.getPlace();\r\n            if (place.geometry) {\r\n                this.gmap.setCenter(place.geometry.location);\r\n                this.gmap.setZoom(config.zoom);\r\n            }\r\n        });\r\n\r\n        this.gmap.addListener('click', (event: google.maps.MouseEvent) => {\r\n            this.map.addBeehive(new Location(event.latLng.lat(), event.latLng.lng()));\r\n        });\r\n\r\n\r\n        google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\r\n            this.map.handleCustomControls();\r\n        });\r\n    }\r\n}\r\n","import {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\n\r\nexport interface IHiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  index: number;\r\n}\r\nexport class Hive {\r\n  private options: IHiveOptions;\r\n  private mapObject: google.maps.Polygon;\r\n  private isActive: boolean;\r\n  private activeListener: google.maps.MapsEventListener;\r\n\r\n  constructor(options: IHiveOptions) {\r\n    this.options = options;\r\n\r\n    let center = this.options.center.getLatLng();\r\n    let radius = Util.getHiveRadius(this.options.steps);\r\n\r\n    let computeOffset = google.maps.geometry.spherical.computeOffset;\r\n\r\n    let hexPoints: google.maps.LatLng[] = [\r\n      computeOffset(center, radius, 30),\r\n      computeOffset(center, radius, 90),\r\n      computeOffset(center, radius, 150),\r\n      computeOffset(center, radius, 210),\r\n      computeOffset(center, radius, 270),\r\n      computeOffset(center, radius, 330)\r\n    ];\r\n\r\n    let hex = new google.maps.Polygon({\r\n      paths: hexPoints,\r\n      fillOpacity: 0.3,\r\n      strokeWeight: 1,\r\n      zIndex: 2,\r\n    });\r\n\r\n    this.mapObject = hex;\r\n    this.toggleActive();\r\n    this.options.map.addMapObject(hex);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Polygon;\r\n  }\r\n\r\n  public toggleActive(): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillColor', this.isActive ? '#0F0' : '#F00');\r\n  }\r\n\r\n  public addListener(): void {\r\n    this.activeListener = google.maps.event.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n  }\r\n\r\n  public removeListener(): void {\r\n    this.activeListener.remove();\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\nimport * as $ from 'jquery';\r\n\r\nexport interface IMapOptions {\r\n  gmap: google.maps.Map;\r\n}\r\n\r\nexport class Map {\r\n  private options: IMapOptions;\r\n  private beehives: Beehive[];\r\n  private activeBeehive: Beehive;\r\n  private isEditingHives: boolean;\r\n  private steps: number;\r\n\r\n  constructor (options: IMapOptions) {\r\n    this.options = options;\r\n    this.beehives = [];\r\n    this.activeBeehive = null;\r\n\r\n    this.steps = config.steps;\r\n  }\r\n\r\n  public handleCustomControls(): void {\r\n    let options = $('#beehive-control .slider').data('zfPlugin').options;\r\n    options.end = config.maxSteps;\r\n    options.initialStart = config.steps;\r\n\r\n    $('#custom-map-controls').show();\r\n    Foundation.reInit(['slider']);\r\n\r\n    $('#beehive-control .slider').on('moved.zf.slider', (e) => this.changeSteps(e));\r\n    $('#remove').on('click', () => this.removeActiveHive());\r\n    $('#edit-hives').on('click', () => this.editHives());\r\n  }\r\n\r\n  public addBeehive(location: Location): void {\r\n    let beehive = new Beehive(<IBeehiveOptions>{ map: this, steps: config.steps, leaps: config.leaps, center: location });\r\n    this.beehives.push(beehive);\r\n  }\r\n\r\n  public addMapObject(mapObject: google.maps.MVCObject): void {\r\n      mapObject.set('map', this.options.gmap);\r\n  }\r\n\r\n  public removeMapObject(mapObject: google.maps.MVCObject): google.maps.MVCObject {\r\n      mapObject.set('map', null);\r\n      mapObject = null;\r\n      return mapObject;\r\n  }\r\n\r\n  public addListener(mapObject: google.maps.MVCObject, eventName: string, handler: (...args: any[]) => void): void {\r\n    google.maps.event.addListener(mapObject, eventName, handler);\r\n  }\r\n\r\n  private changeSteps(event: JQueryEventObject): void {\r\n    this.steps = Number($('#steps').val());\r\n\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.resize(this.steps);\r\n    }\r\n  }\r\n  private removeActiveHive(): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.reset(true);\r\n      this.beehives.splice(this.beehives.indexOf(this.activeBeehive), 1);\r\n      this.activeBeehive = null;\r\n      $('#remove').hide();\r\n    }\r\n  }\r\n\r\n  public setActiveBeehive(beehive: Beehive): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.disableActive();\r\n    }\r\n    if (beehive !== null) {\r\n      $('#remove').show();\r\n      $('#edit-hives').show();\r\n    } else {\r\n      $('#remove').hide();\r\n      $('#edit-hives').hide();\r\n    }\r\n    this.activeBeehive = beehive;\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.activeBeehive.editHives();\r\n  }\r\n}\r\n","export default class Config {\r\n  public static googleMapsKey: string = 'AIzaSyD8WtOa0Mw_lpppdbXQrORnabd9LK3bri8';\r\n  public static latitude: number = 38.624691;\r\n  public static longitude: number = -90.184776;\r\n  public static zoom: number = 12;\r\n  public static leaps: number = 4;\r\n  public static steps: number = 5;\r\n  public static maxSteps: number = 15;\r\n};\r\n"],"sourceRoot":"/source/"}
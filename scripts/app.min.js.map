{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/app/app.ts","src/scripts/app/beehive.ts","src/scripts/app/gmaps.ts","src/scripts/app/hive.ts","src/scripts/app/map.ts","src/scripts/app/viewModel.ts","src/scripts/config.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","D:\\Code\\beccasafan\\PGM-MultiLoc\\src\\scripts\\app\\app.ts","$","gmaps_ts_1","Location","latitude","longitude","latLng","google","maps","LatLng","prototype","toString","lat","lng","getLatLng","Util","getHiveRadius","steps","Math","sqrt","scanRadius","getStepsToCoverRadius","radius","ceil","getBeehiveRadius","leaps","floor","hiveOverlap","getLeapsToCoverRadius","distanceBetweenHiveCenters","hexInnerRadius","locationAdjustment","GMaps","document","foundation","config_ts_1","app_ts_1","hive_ts_1","ko","_","Beehive","options","_this","hives","observableArray","isEditingHives","coveringRadius","default","activeHives","computed","getActiveHives","deferEvaluation","mapObject","Circle","fillColor","fillOpacity","strokeWeight","clickable","center","editable","draggable","zIndex","map","addMapObject","generateHives","toggleActive","addListener","getRadius","newLeaps","getCenter","getHives","console","log","reset","dispose","removeMapObject","locations","getNextPoint","p","heading","distance","adjust","nextPoint","geometry","spherical","computeOffset","push","Hive","point","lastHiveCenter","leap","se","sw","nw","ne","resize","disableActive","isActive","set","fromMap","setActiveBeehive","editHives","removeListener","filter","h","load_google_maps_api_1","map_ts_1","Map","key","googleMapsKey","libraries","then","googleMaps","initMap","getMap","gmap","getElementById","zoom","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","input","controls","ControlPosition","TOP_CENTER","BOTTOM_CENTER","LEFT_BOTTOM","autocomplete","places","Autocomplete","bindTo","place","getPlace","setCenter","location","setZoom","event","addBeehive","addListenerOnce","observable","hexPoints","hex","Polygon","paths","activeListener","remove","beehive_ts_1","ViewModel_ts_1","beehives","activeBeehive","sliderOptions","data","end","maxSteps","initialStart","show","Foundation","reInit","on","changeSteps","removeActiveHive","vm","ViewModel","applyBindings","getElementsByTagName","beehive","eventName","handler","Number","val","splice","indexOf","hide","flatten","b","Config","Object","defineProperty","value"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as $ from 'jquery';\r\nimport 'jquery-migrate';\r\nimport 'foundation-sites';\r\n\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {GMaps} from './gmaps.ts';\r\n\r\nimport config from '../config.ts';\r\n\r\nexport class Location {\r\n  private latLng: google.maps.LatLng;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latLng = new google.maps.LatLng(latitude, longitude);\r\n  }\r\n\r\n  public toString(): string {\r\n    return `${this.latLng.lat()}, ${this.latLng.lng()}`;\r\n  }\r\n\r\n  public getLatLng(): google.maps.LatLng {\r\n    return this.latLng;\r\n  }\r\n}\r\n\r\nexport class Util {\r\n  private static scanRadius: number = 70;\r\n  public static locationAdjustment: number = Math.sqrt(3) * Util.scanRadius / 2;\r\n  public static hiveOverlap: number = (Util.scanRadius / 2) - ((Util.scanRadius - Util.locationAdjustment) * 2);\r\n\r\n  public static getHiveRadius(steps: number): number {\r\n    return ((steps - 1) * Math.sqrt(3) * this.scanRadius) + this.scanRadius;\r\n  }\r\n\r\n  public static getStepsToCoverRadius(radius: number): number {\r\n    return Math.ceil(((radius - this.scanRadius) / this.scanRadius / Math.sqrt(3)) + 1);\r\n  }\r\n\r\n  public static getBeehiveRadius(leaps: number, steps: number): number {\r\n    return Math.floor((3 * (leaps - 1) / 2) - 0.5) * (Util.getHiveRadius(steps) - Util.hiveOverlap) + Util.getHiveRadius(steps);\r\n  }\r\n\r\n  public static getLeapsToCoverRadius(radius: number, steps: number): number {\r\n    return Math.ceil((((radius - Util.getHiveRadius(steps)) / (Util.getHiveRadius(steps) - Util.hiveOverlap) + 0.5) * 2 / 3) + 1);\r\n  }\r\n  public static distanceBetweenHiveCenters(steps: number): number {\r\n    let hexInnerRadius = (steps - 1) * (3 * this.scanRadius / 2) + Util.locationAdjustment;\r\n    return (hexInnerRadius * 2 - Util.hiveOverlap);\r\n  }\r\n}\r\n\r\nexport class App {\r\n\r\n  constructor() {\r\n    let gmaps = new GMaps();\r\n    $(document).foundation();\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\nimport {IHiveOptions, Hive} from './hive.ts';\r\n\r\nimport * as ko from 'knockout';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IBeehiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  leaps: number;\r\n}\r\nexport class Beehive {\r\n  private options: IBeehiveOptions;\r\n  private lastHiveCenter: google.maps.LatLng;\r\n  private hives: KnockoutObservableArray<Hive>;\r\n  private mapObject: google.maps.Circle;\r\n  private isActive: boolean;\r\n  private isEditingHives: boolean;\r\n  private coveringRadius: number;\r\n  public activeHives: KnockoutComputed<Hive[]>;\r\n\r\n  constructor (options: IBeehiveOptions) {\r\n    this.options = options;\r\n    this.hives = ko.observableArray([]);\r\n    this.isEditingHives = false;\r\n    this.coveringRadius = Util.getBeehiveRadius(config.leaps, config.steps);\r\n\r\n    this.activeHives = ko.computed(() => this.getActiveHives(), this, { deferEvaluation: true });\r\n\r\n    this.mapObject = new google.maps.Circle({\r\n      radius: this.coveringRadius,\r\n      fillColor: '#0000FF',\r\n      fillOpacity: 0.0,\r\n      strokeWeight: 1,\r\n      clickable: true,\r\n      center: this.options.center.getLatLng(),\r\n      editable: true,\r\n      draggable: true,\r\n      zIndex: 3\r\n    });\r\n\r\n    this.options.map.addMapObject(this.mapObject);\r\n\r\n    this.generateHives();\r\n    this.toggleActive();\r\n\r\n    this.options.map.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n\r\n    this.options.map.addListener(this.mapObject, 'radius_changed', () => {\r\n      this.coveringRadius = this.mapObject.getRadius();\r\n\r\n      let newLeaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n      if (this.options.leaps !== newLeaps) {\r\n        this.options.leaps = newLeaps;\r\n        this.generateHives();\r\n      }\r\n\r\n    });\r\n\r\n    this.options.map.addListener(this.mapObject, 'center_changed', () => {\r\n      let center = this.mapObject.getCenter();\r\n      this.options.center = new Location(center.lat(), center.lng());\r\n      this.generateHives();\r\n    });\r\n  }\r\n\r\n  public getHives(): Hive[] {\r\n    console.log(`getting hives for ${this.options.center.toString()}`);\r\n    return this.hives();\r\n  }\r\n\r\n  public reset(dispose: boolean = false): void {\r\n    // cleanup old hives\r\n    for (let i = 0; i < this.hives().length; i++) {\r\n      this.hives()[i].reset();\r\n    }\r\n\r\n    this.hives([]);\r\n\r\n    if (dispose) {\r\n      this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Circle;\r\n    }\r\n  }\r\n\r\n  private generateHives(): Hive[] {\r\n    this.reset();\r\n\r\n    let locations: Hive[] = [];\r\n    let distanceBetweenHiveCenters = Util.distanceBetweenHiveCenters(this.options.steps);\r\n\r\n    let getNextPoint = (p, heading, distance = distanceBetweenHiveCenters, adjust = true) => {\r\n      let nextPoint = google.maps.geometry.spherical.computeOffset(p, distance, heading);\r\n      if (adjust) {\r\n        nextPoint = google.maps.geometry.spherical.computeOffset(nextPoint, Util.locationAdjustment, heading + 90);\r\n      }\r\n      locations.push(new Hive(<IHiveOptions>{ center: new Location(nextPoint.lat(), nextPoint.lng()), steps: this.options.steps, map: this.options.map }));\r\n      return nextPoint;\r\n    };\r\n\r\n    let point: google.maps.LatLng = this.options.center.getLatLng();\r\n    point = getNextPoint(point, 0, 0, false);\r\n    this.lastHiveCenter = point;\r\n\r\n    for (let leap = 2; leap <= this.options.leaps; leap++) {\r\n      point = getNextPoint(this.lastHiveCenter, 0, distanceBetweenHiveCenters);\r\n\r\n      this.lastHiveCenter = point;\r\n\r\n      for (let se = 1; se < leap; se++) {\r\n        point = getNextPoint(point, 120);\r\n      }\r\n\r\n      for (let s = 1; s < leap; s++) {\r\n        point = getNextPoint(point, 180);\r\n      }\r\n\r\n      for (let sw = 1; sw < leap; sw++) {\r\n        point = getNextPoint(point, 240);\r\n      }\r\n\r\n      for (let nw = 1; nw < leap; nw++) {\r\n        point = getNextPoint(point, 300);\r\n      }\r\n\r\n      for (let n = 1; n < leap; n++) {\r\n        point = getNextPoint(point, 0);\r\n      }\r\n\r\n      for (let ne = 2; ne < leap; ne++) {\r\n        point = getNextPoint(point, 60);\r\n      }\r\n    }\r\n\r\n    this.hives(locations);\r\n    return this.hives();\r\n  }\r\n\r\n  public resize(steps: number): void {\r\n    this.options.steps = steps;\r\n    this.options.leaps = Util.getLeapsToCoverRadius(this.coveringRadius, this.options.steps);\r\n    this.generateHives();\r\n  }\r\n\r\n  public disableActive(): void {\r\n    this.isActive = false;\r\n    this.mapObject.set('fillOpacity', 0);\r\n  }\r\n\r\n  public toggleActive(fromMap: boolean = false): void {\r\n    this.isActive = !this.isActive;\r\n    this.mapObject.set('fillOpacity', this.isActive ? 0.3 : 0);\r\n\r\n    this.options.map.setActiveBeehive(this.isActive ? this : null);\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.isEditingHives = !this.isEditingHives;\r\n\r\n    for (let i = 0; i < this.hives().length; i++) {\r\n      this.isEditingHives ? this.hives()[i].addListener() : this.hives()[i].removeListener();\r\n    }\r\n\r\n    this.mapObject.set('zIndex', this.isEditingHives ? 1 : 3);\r\n    this.mapObject.set('fillOpacity', this.isEditingHives ? 0 : 0.3);\r\n  }\r\n\r\n  private getActiveHives(): Hive[] {\r\n    return _.filter(this.hives(), (h) => h.isActive());\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport * as $ from 'jquery';\r\nimport loadGoogleMapsApi from 'load-google-maps-api';\r\nimport {Location} from './app.ts';\r\nimport {IMapOptions, Map} from './map.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\n\r\nexport class GMaps {\r\n    private map: Map;\r\n    private gmap: google.maps.Map;\r\n\r\n    constructor() {\r\n        this.map = new Map();\r\n        loadGoogleMapsApi({\r\n            key: config.googleMapsKey,\r\n            libraries: ['places', 'geometry']\r\n        }).then((googleMaps) => {\r\n            this.initMap();\r\n        });\r\n    }\r\n\r\n    public getMap(): Map {\r\n        return this.map;\r\n    }\r\n\r\n    private initMap(): void {\r\n        this.gmap = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: config.zoom,\r\n            center: new google.maps.LatLng(config.latitude, config.longitude),\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            mapTypeControl: false\r\n        });\r\n\r\n        let input = document.getElementById('pac-input') as HTMLInputElement;\r\n        this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('custom-map-controls'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(document.getElementById('generate-trigger'));\r\n\r\n        this.gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(document.getElementById('github-buttons'));\r\n\r\n        let autocomplete = new google.maps.places.Autocomplete(input);\r\n        autocomplete.bindTo('bounds', this.gmap);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            let place = autocomplete.getPlace();\r\n            if (place.geometry) {\r\n                this.gmap.setCenter(place.geometry.location);\r\n                this.gmap.setZoom(config.zoom);\r\n            }\r\n        });\r\n\r\n        this.gmap.addListener('click', (event: google.maps.MouseEvent) => {\r\n            this.map.addBeehive(new Location(event.latLng.lat(), event.latLng.lng()));\r\n        });\r\n\r\n        google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\r\n            this.map.initMap(<IMapOptions>{ gmap: this.gmap });\r\n        });\r\n    }\r\n}\r\n","import {Util, Location} from './app.ts';\r\nimport {Map} from './map.ts';\r\n\r\nimport * as ko from 'knockout';\r\n\r\nexport interface IHiveOptions {\r\n  map: Map;\r\n  center: Location;\r\n  steps: number;\r\n  index: number;\r\n}\r\nexport class Hive {\r\n  private options: IHiveOptions;\r\n  private mapObject: google.maps.Polygon;\r\n  public isActive: KnockoutObservable<boolean>;\r\n  private activeListener: google.maps.MapsEventListener;\r\n\r\n  constructor(options: IHiveOptions) {\r\n    this.options = options;\r\n    this.isActive = ko.observable(false);\r\n\r\n    let center = this.options.center.getLatLng();\r\n    let radius = Util.getHiveRadius(this.options.steps);\r\n\r\n    let computeOffset = google.maps.geometry.spherical.computeOffset;\r\n\r\n    let hexPoints: google.maps.LatLng[] = [\r\n      computeOffset(center, radius, 30),\r\n      computeOffset(center, radius, 90),\r\n      computeOffset(center, radius, 150),\r\n      computeOffset(center, radius, 210),\r\n      computeOffset(center, radius, 270),\r\n      computeOffset(center, radius, 330)\r\n    ];\r\n\r\n    let hex = new google.maps.Polygon({\r\n      paths: hexPoints,\r\n      fillOpacity: 0.3,\r\n      strokeWeight: 1,\r\n      zIndex: 2,\r\n    });\r\n\r\n    this.mapObject = hex;\r\n    this.toggleActive();\r\n    this.options.map.addMapObject(hex);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.mapObject = this.options.map.removeMapObject(this.mapObject) as google.maps.Polygon;\r\n  }\r\n\r\n  public toggleActive(): void {\r\n    this.isActive(!this.isActive());\r\n    this.mapObject.set('fillColor', this.isActive() ? '#0F0' : '#F00');\r\n  }\r\n\r\n  public addListener(): void {\r\n    this.activeListener = google.maps.event.addListener(this.mapObject, 'click', () => this.toggleActive());\r\n  }\r\n\r\n  public removeListener(): void {\r\n    this.activeListener.remove();\r\n  }\r\n\r\n  public getCenter(): Location {\r\n    return this.options.center;\r\n  }\r\n}\r\n","import config from '../config.ts';\r\nimport {Util, Location} from './app.ts';\r\nimport {IBeehiveOptions, Beehive} from './beehive.ts';\r\nimport * as $ from 'jquery';\r\nimport {ViewModel} from './ViewModel.ts';\r\nimport {Hive} from './hive.ts';\r\n\r\nimport * as ko from 'knockout';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IMapOptions {\r\n  gmap: google.maps.Map;\r\n}\r\n\r\nexport class Map {\r\n  private options: IMapOptions;\r\n  private beehives: KnockoutObservableArray<Beehive>;\r\n  private activeBeehive: Beehive;\r\n  private isEditingHives: boolean;\r\n  private steps: number;\r\n  public activeHives: KnockoutComputed<Hive[]>;\r\n\r\n  constructor () {\r\n    this.beehives = ko.observableArray([]);\r\n    this.activeBeehive = null;\r\n\r\n    this.steps = config.steps;\r\n\r\n    this.activeHives = ko.computed(() => this.getActiveHives());\r\n  }\r\n\r\n  public initMap(options: IMapOptions): void {\r\n    this.options = options;\r\n    let sliderOptions = $('#beehive-control .slider').data('zfPlugin').options;\r\n    sliderOptions.end = config.maxSteps;\r\n    sliderOptions.initialStart = config.steps;\r\n\r\n    $('#custom-map-controls').show();\r\n    Foundation.reInit(['slider']);\r\n\r\n    $('#beehive-control .slider').on('moved.zf.slider', (e) => this.changeSteps(e));\r\n    $('#remove').on('click', () => this.removeActiveHive());\r\n    $('#edit-hives').on('click', () => this.editHives());\r\n\r\n    let vm = new ViewModel({map: this});\r\n    ko.applyBindings(vm, document.getElementsByTagName('body')[0]);\r\n  }\r\n\r\n  public addBeehive(location: Location): void {\r\n    let beehive = new Beehive(<IBeehiveOptions>{ map: this, steps: config.steps, leaps: config.leaps, center: location });\r\n    this.beehives.push(beehive);\r\n    $('#generate-trigger').show();\r\n  }\r\n\r\n  public addMapObject(mapObject: google.maps.MVCObject): void {\r\n      mapObject.set('map', this.options.gmap);\r\n  }\r\n\r\n  public removeMapObject(mapObject: google.maps.MVCObject): google.maps.MVCObject {\r\n      mapObject.set('map', null);\r\n      mapObject = null;\r\n      return mapObject;\r\n  }\r\n\r\n  public addListener(mapObject: google.maps.MVCObject, eventName: string, handler: (...args: any[]) => void): void {\r\n    google.maps.event.addListener(mapObject, eventName, handler);\r\n  }\r\n\r\n  private changeSteps(event: JQueryEventObject): void {\r\n    this.steps = Number($('#steps').val());\r\n\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.resize(this.steps);\r\n    }\r\n  }\r\n  private removeActiveHive(): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.reset(true);\r\n      this.beehives.splice(this.beehives.indexOf(this.activeBeehive), 1);\r\n      this.activeBeehive = null;\r\n      $('#remove').hide();\r\n\r\n      if (this.beehives().length === 0) {\r\n        $('#generate-trigger').hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  public setActiveBeehive(beehive: Beehive): void {\r\n    if (this.activeBeehive !== null) {\r\n      this.activeBeehive.disableActive();\r\n    }\r\n    if (beehive !== null) {\r\n      $('#remove').show();\r\n      $('#edit-hives').show();\r\n    } else {\r\n      $('#remove').hide();\r\n      $('#edit-hives').hide();\r\n    }\r\n    this.activeBeehive = beehive;\r\n  }\r\n\r\n  public editHives(): void {\r\n    this.activeBeehive.editHives();\r\n  }\r\n\r\n  private getActiveHives(): Hive[] {\r\n    return _.flatten(_.map(this.beehives(), (b) => b.activeHives()));\r\n  }\r\n}\r\n","import {Map} from './map.ts';\r\nimport {Hive} from './hive.ts';\r\n\r\nimport * as ko from 'knockout';\r\n\r\nexport interface IViewModelOptions {\r\n    map: Map;\r\n}\r\nexport class ViewModel {\r\n    private options: IViewModelOptions;\r\n    public activeHives: KnockoutObservable<Hive[]>;\r\n\r\n    constructor(options: IViewModelOptions) {\r\n        this.options = options;\r\n        this.activeHives = ko.computed(() => this.getActiveHives());\r\n    }\r\n\r\n    private getActiveHives(): Hive[] {\r\n        return this.options.map.activeHives();\r\n    }\r\n}\r\n","export default class Config {\r\n  public static googleMapsKey: string = 'AIzaSyD8WtOa0Mw_lpppdbXQrORnabd9LK3bri8';\r\n  public static latitude: number = 38.624691;\r\n  public static longitude: number = -90.184776;\r\n  public static zoom: number = 12;\r\n  public static leaps: number = 4;\r\n  public static steps: number = 5;\r\n  public static maxSteps: number = 15;\r\n};\r\n"],"sourceRoot":"/source/"}